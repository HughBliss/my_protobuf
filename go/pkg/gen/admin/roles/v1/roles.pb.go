// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: admin_authz/roles.proto

package admrolserv1

import (
	_ "github.com/hughbliss/my_protobuf/go/pkg/acman/gen/permissions"
	v11 "github.com/hughbliss/my_protobuf/go/pkg/gen/common/v1"
	v1 "github.com/hughbliss/my_protobuf/go/pkg/gen/roles/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateRoleRequest запрос на создание новой роли.
type CreateRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Role роль для создания.
	Role *v1.Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CreateRoleRequest) Reset() {
	*x = CreateRoleRequest{}
	mi := &file_admin_authz_roles_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequest) ProtoMessage() {}

func (x *CreateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_authz_roles_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_authz_roles_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRoleRequest) GetRole() *v1.Role {
	if x != nil {
		return x.Role
	}
	return nil
}

// CreateRoleResponse ответ на создание роли.
type CreateRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DomainRoles обновленный список ролей домена.
	DomainRoles *DomainRoles `protobuf:"bytes,1,opt,name=domain_roles,json=domainRoles,proto3" json:"domain_roles,omitempty"`
}

func (x *CreateRoleResponse) Reset() {
	*x = CreateRoleResponse{}
	mi := &file_admin_authz_roles_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleResponse) ProtoMessage() {}

func (x *CreateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_authz_roles_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_authz_roles_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRoleResponse) GetDomainRoles() *DomainRoles {
	if x != nil {
		return x.DomainRoles
	}
	return nil
}

// UpdateRoleRequest запрос на обновление роли.
type UpdateRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Role обновленная роль.
	Role *v1.Role `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *UpdateRoleRequest) Reset() {
	*x = UpdateRoleRequest{}
	mi := &file_admin_authz_roles_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleRequest) ProtoMessage() {}

func (x *UpdateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_authz_roles_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_authz_roles_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRoleRequest) GetRole() *v1.Role {
	if x != nil {
		return x.Role
	}
	return nil
}

// UpdateRoleResponse ответ на обновление роли.
type UpdateRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DomainRoles обновленный список ролей домена.
	DomainRoles *DomainRoles `protobuf:"bytes,1,opt,name=domain_roles,json=domainRoles,proto3" json:"domain_roles,omitempty"`
}

func (x *UpdateRoleResponse) Reset() {
	*x = UpdateRoleResponse{}
	mi := &file_admin_authz_roles_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleResponse) ProtoMessage() {}

func (x *UpdateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_authz_roles_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_authz_roles_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateRoleResponse) GetDomainRoles() *DomainRoles {
	if x != nil {
		return x.DomainRoles
	}
	return nil
}

// DeleteRoleRequest запрос на удаление роли.
type DeleteRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// RoleId идентификатор роли для удаления.
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *DeleteRoleRequest) Reset() {
	*x = DeleteRoleRequest{}
	mi := &file_admin_authz_roles_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRequest) ProtoMessage() {}

func (x *DeleteRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_authz_roles_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_authz_roles_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

// DeleteRoleResponse ответ на удаление роли.
type DeleteRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DomainRoles обновленный список ролей домена.
	DomainRoles *DomainRoles `protobuf:"bytes,1,opt,name=domain_roles,json=domainRoles,proto3" json:"domain_roles,omitempty"`
}

func (x *DeleteRoleResponse) Reset() {
	*x = DeleteRoleResponse{}
	mi := &file_admin_authz_roles_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResponse) ProtoMessage() {}

func (x *DeleteRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_authz_roles_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_authz_roles_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRoleResponse) GetDomainRoles() *DomainRoles {
	if x != nil {
		return x.DomainRoles
	}
	return nil
}

// DomainRoles группирует роли по домену.
type DomainRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Domain информация о домене.
	Domain *v11.Domain `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// Roles список ролей в домене.
	Roles []*v1.Role `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *DomainRoles) Reset() {
	*x = DomainRoles{}
	mi := &file_admin_authz_roles_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainRoles) ProtoMessage() {}

func (x *DomainRoles) ProtoReflect() protoreflect.Message {
	mi := &file_admin_authz_roles_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainRoles.ProtoReflect.Descriptor instead.
func (*DomainRoles) Descriptor() ([]byte, []int) {
	return file_admin_authz_roles_proto_rawDescGZIP(), []int{6}
}

func (x *DomainRoles) GetDomain() *v11.Domain {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *DomainRoles) GetRoles() []*v1.Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

// GetAllRolesRequest запрос на получение всех ролей.
type GetAllRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllRolesRequest) Reset() {
	*x = GetAllRolesRequest{}
	mi := &file_admin_authz_roles_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRolesRequest) ProtoMessage() {}

func (x *GetAllRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_authz_roles_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRolesRequest.ProtoReflect.Descriptor instead.
func (*GetAllRolesRequest) Descriptor() ([]byte, []int) {
	return file_admin_authz_roles_proto_rawDescGZIP(), []int{7}
}

// GetAllRolesResponse ответ со списком всех ролей по доменам.
type GetAllRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DomainRoles список ролей сгруппированных по доменам.
	DomainRoles []*DomainRoles `protobuf:"bytes,1,rep,name=domain_roles,json=domainRoles,proto3" json:"domain_roles,omitempty"`
}

func (x *GetAllRolesResponse) Reset() {
	*x = GetAllRolesResponse{}
	mi := &file_admin_authz_roles_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRolesResponse) ProtoMessage() {}

func (x *GetAllRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_authz_roles_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRolesResponse.ProtoReflect.Descriptor instead.
func (*GetAllRolesResponse) Descriptor() ([]byte, []int) {
	return file_admin_authz_roles_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllRolesResponse) GetDomainRoles() []*DomainRoles {
	if x != nil {
		return x.DomainRoles
	}
	return nil
}

var File_admin_authz_roles_proto protoreflect.FileDescriptor

var file_admin_authz_roles_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x73, 0x6f, 0x6d, 0x65, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x61, 0x63, 0x6d, 0x61, 0x6e, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x7a,
	0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x22, 0x5f, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73,
	0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x22, 0x42, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x5f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x6b, 0x0a, 0x0b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x32, 0x98, 0x07, 0x0a, 0x11, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0xe2, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x2d, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x74, 0x8a, 0xb5, 0x18, 0x53, 0x0a, 0x16, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x39, 0xd0,
	0xa7, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd0, 0xb2, 0xd1, 0x81,
	0xd0, 0xb5, 0xd1, 0x85, 0x20, 0xd1, 0x81, 0xd1, 0x83, 0xd1, 0x89, 0xd0, 0xb5, 0xd1, 0x81, 0xd1,
	0x82, 0xd0, 0xb2, 0xd1, 0x83, 0xd1, 0x8e, 0xd1, 0x89, 0xd0, 0xb8, 0xd1, 0x85, 0x20, 0xd1, 0x80,
	0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xb9, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0xe5, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x7a, 0x8a, 0xb5, 0x18, 0x56, 0x0a, 0x17, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x3b, 0xd0, 0xa1, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xb4, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb8,
	0xd0, 0xb5, 0x20, 0xd0, 0xb8, 0x20, 0xd1, 0x80, 0xd0, 0xb5, 0xd0, 0xb4, 0xd0, 0xb0, 0xd0, 0xba,
	0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb8,
	0xd0, 0xb5, 0x20, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xb9, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0xe5, 0x01,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x2e, 0x73,
	0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x6f, 0x6d,
	0x65, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7a, 0x8a, 0xb5, 0x18, 0x56, 0x0a,
	0x17, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x3b, 0xd0, 0xa1, 0xd0, 0xbe, 0xd0, 0xb7,
	0xd0, 0xb4, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd0, 0xb8, 0x20, 0xd1, 0x80,
	0xd0, 0xb5, 0xd0, 0xb4, 0xd0, 0xb0, 0xd0, 0xba, 0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x80, 0xd0, 0xbe,
	0xd0, 0xb2, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd1, 0x80, 0xd0, 0xbe, 0xd0,
	0xbb, 0xd0, 0xb5, 0xd0, 0xb9, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x1a, 0x15,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0xcd, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x6f, 0x6d, 0x65, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x62, 0x8a, 0xb5, 0x18, 0x37, 0x0a, 0x18, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x7a, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x1b, 0xd0, 0xa3, 0xd0, 0xb4, 0xd0, 0xb0, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0,
	0xb8, 0xd0, 0xb5, 0x20, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xb9, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x2a, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x48, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x75, 0x67, 0x68, 0x62, 0x6c, 0x69, 0x73, 0x73, 0x2f, 0x6d, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x61, 0x64, 0x6d, 0x72, 0x6f, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_authz_roles_proto_rawDescOnce sync.Once
	file_admin_authz_roles_proto_rawDescData = file_admin_authz_roles_proto_rawDesc
)

func file_admin_authz_roles_proto_rawDescGZIP() []byte {
	file_admin_authz_roles_proto_rawDescOnce.Do(func() {
		file_admin_authz_roles_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_authz_roles_proto_rawDescData)
	})
	return file_admin_authz_roles_proto_rawDescData
}

var file_admin_authz_roles_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_admin_authz_roles_proto_goTypes = []any{
	(*CreateRoleRequest)(nil),   // 0: some.admin.authz.roles.v1.CreateRoleRequest
	(*CreateRoleResponse)(nil),  // 1: some.admin.authz.roles.v1.CreateRoleResponse
	(*UpdateRoleRequest)(nil),   // 2: some.admin.authz.roles.v1.UpdateRoleRequest
	(*UpdateRoleResponse)(nil),  // 3: some.admin.authz.roles.v1.UpdateRoleResponse
	(*DeleteRoleRequest)(nil),   // 4: some.admin.authz.roles.v1.DeleteRoleRequest
	(*DeleteRoleResponse)(nil),  // 5: some.admin.authz.roles.v1.DeleteRoleResponse
	(*DomainRoles)(nil),         // 6: some.admin.authz.roles.v1.DomainRoles
	(*GetAllRolesRequest)(nil),  // 7: some.admin.authz.roles.v1.GetAllRolesRequest
	(*GetAllRolesResponse)(nil), // 8: some.admin.authz.roles.v1.GetAllRolesResponse
	(*v1.Role)(nil),             // 9: some.authz.roles.v1.Role
	(*v11.Domain)(nil),          // 10: some.common.Domain
}
var file_admin_authz_roles_proto_depIdxs = []int32{
	9,  // 0: some.admin.authz.roles.v1.CreateRoleRequest.role:type_name -> some.authz.roles.v1.Role
	6,  // 1: some.admin.authz.roles.v1.CreateRoleResponse.domain_roles:type_name -> some.admin.authz.roles.v1.DomainRoles
	9,  // 2: some.admin.authz.roles.v1.UpdateRoleRequest.role:type_name -> some.authz.roles.v1.Role
	6,  // 3: some.admin.authz.roles.v1.UpdateRoleResponse.domain_roles:type_name -> some.admin.authz.roles.v1.DomainRoles
	6,  // 4: some.admin.authz.roles.v1.DeleteRoleResponse.domain_roles:type_name -> some.admin.authz.roles.v1.DomainRoles
	10, // 5: some.admin.authz.roles.v1.DomainRoles.domain:type_name -> some.common.Domain
	9,  // 6: some.admin.authz.roles.v1.DomainRoles.roles:type_name -> some.authz.roles.v1.Role
	6,  // 7: some.admin.authz.roles.v1.GetAllRolesResponse.domain_roles:type_name -> some.admin.authz.roles.v1.DomainRoles
	7,  // 8: some.admin.authz.roles.v1.AdminRolesService.GetAllRoles:input_type -> some.admin.authz.roles.v1.GetAllRolesRequest
	0,  // 9: some.admin.authz.roles.v1.AdminRolesService.CreateRole:input_type -> some.admin.authz.roles.v1.CreateRoleRequest
	2,  // 10: some.admin.authz.roles.v1.AdminRolesService.UpdateRole:input_type -> some.admin.authz.roles.v1.UpdateRoleRequest
	4,  // 11: some.admin.authz.roles.v1.AdminRolesService.DeleteRole:input_type -> some.admin.authz.roles.v1.DeleteRoleRequest
	8,  // 12: some.admin.authz.roles.v1.AdminRolesService.GetAllRoles:output_type -> some.admin.authz.roles.v1.GetAllRolesResponse
	1,  // 13: some.admin.authz.roles.v1.AdminRolesService.CreateRole:output_type -> some.admin.authz.roles.v1.CreateRoleResponse
	3,  // 14: some.admin.authz.roles.v1.AdminRolesService.UpdateRole:output_type -> some.admin.authz.roles.v1.UpdateRoleResponse
	5,  // 15: some.admin.authz.roles.v1.AdminRolesService.DeleteRole:output_type -> some.admin.authz.roles.v1.DeleteRoleResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_admin_authz_roles_proto_init() }
func file_admin_authz_roles_proto_init() {
	if File_admin_authz_roles_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_authz_roles_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_authz_roles_proto_goTypes,
		DependencyIndexes: file_admin_authz_roles_proto_depIdxs,
		MessageInfos:      file_admin_authz_roles_proto_msgTypes,
	}.Build()
	File_admin_authz_roles_proto = out.File
	file_admin_authz_roles_proto_rawDesc = nil
	file_admin_authz_roles_proto_goTypes = nil
	file_admin_authz_roles_proto_depIdxs = nil
}
